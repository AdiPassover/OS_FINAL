==19137== Cachegrind, a cache and branch-prediction profiler
==19137== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==19137== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==19137== Command: ./coverage.sh -l
==19137== Parent PID: 19051
==19137== 
--19137-- 
--19137-- Valgrind options:
--19137--    -v
--19137--    --tool=cachegrind
--19137--    --log-file=valgrind_reports/lf_cachegrind.txt
--19137-- Contents of /proc/version:
--19137--   Linux version 5.15.153.1-microsoft-standard-WSL2 (root@941d701f84f1) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP Fri Mar 29 23:14:13 UTC 2024
--19137-- 
--19137-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--19137-- Page sizes: currently 4096, max supported 4096
--19137-- Valgrind library directory: /usr/libexec/valgrind
--19137-- warning: L3 cache found, using its data for the LL simulation.
==19137== Cache configuration used:
==19137==   I1: 32,768 B, 8-way, 64 B lines
==19137==   D1: 49,152 B, 12-way, 64 B lines
==19137==   LL: 12,582,912 B, 12-way, 64 B lines
--19137-- Reading syms from /usr/bin/bash
--19137--    object doesn't have a symbol table
--19137-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--19137--   Considering /usr/lib/debug/.build-id/41/86944c50f8a32b47d74931e3f512b811813b64.debug ..
--19137--   .. build-id is valid
--19137-- Reading syms from /usr/libexec/valgrind/cachegrind-amd64-linux
--19137--    object doesn't have a symbol table
--19137--    object doesn't have a dynamic symbol table
--19137-- Scheduler: using generic scheduler lock implementation.
==19137== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-19137-by-adipassover-on-???
==19137== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-19137-by-adipassover-on-???
==19137== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-19137-by-adipassover-on-???
==19137== 
==19137== TO CONTROL THIS PROCESS USING vgdb (which you probably
==19137== don't want to do, unless you know exactly what you're doing,
==19137== or are doing some strange experiment):
==19137==   /usr/bin/vgdb --pid=19137 ...command...
==19137== 
==19137== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==19137==   /path/to/gdb ./coverage.sh
==19137== and then give GDB the following command
==19137==   target remote | /usr/bin/vgdb --pid=19137
==19137== --pid is optional if only one valgrind process is running
==19137== 
--19137-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--19137--    object doesn't have a symbol table
--19137-- Reading syms from /usr/lib/x86_64-linux-gnu/libtinfo.so.6.3
--19137--    object doesn't have a symbol table
--19137-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--19137--   Considering /usr/lib/debug/.build-id/49/0fef8403240c91833978d494d39e537409b92e.debug ..
--19137--   .. build-id is valid
==19137== 
==19137== I   refs:      1,770,279
==19137== I1  misses:       10,718
==19137== LLi misses:        3,991
==19137== I1  miss rate:      0.61%
==19137== LLi miss rate:      0.23%
==19137== 
==19137== D   refs:        644,888  (406,959 rd   + 237,929 wr)
==19137== D1  misses:       12,286  (  7,768 rd   +   4,518 wr)
==19137== LLd misses:        8,791  (  4,594 rd   +   4,197 wr)
==19137== D1  miss rate:       1.9% (    1.9%     +     1.9%  )
==19137== LLd miss rate:       1.4% (    1.1%     +     1.8%  )
==19137== 
==19137== LL refs:          23,004  ( 18,486 rd   +   4,518 wr)
==19137== LL misses:        12,782  (  8,585 rd   +   4,197 wr)
==19137== LL miss rate:        0.5% (    0.4%     +     1.8%  )
